{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zakharonak.as\\\\Desktop\\\\CartEvent\\\\cart-event\\\\src\\\\store\\\\task-list.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DEFAULT_TASKS from \"./ConstantsVariable\";\nimport addStructure from \"./addStructureFunc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext();\nexport const TaskContextProvider = ({\n  children\n}) => {\n  _s();\n  const [dataTask, mutateDataTask] = useState(addStructure(DEFAULT_TASKS));\n  const [modalEditView, checkModalEditView] = useState({\n    status: false,\n    dataTaskElement: {}\n  });\n  const [modalDeleteView, checkModalDeleteView] = use;\n  const editedTask = task => {\n    DEFAULT_TASKS.map(obj => {\n      if (obj.id === task.id) {\n        return obj.name = task.name, obj.priority = task.priority;\n      }\n    });\n    mutateDataTask(addStructure(DEFAULT_TASKS));\n  };\n  const changeStatus = id => {\n    DEFAULT_TASKS.map(obj => {\n      if (obj.id === id) {\n        if (obj.status <= 2) {\n          return obj.status += 1;\n        } else {\n          return obj.status = 1;\n        }\n      }\n    });\n    mutateDataTask(addStructure(DEFAULT_TASKS));\n  };\n  const requestEditModal = id => {\n    const [taskElement] = dataTask.filter(obj => obj.id === id);\n    checkModalEditView({\n      statusModal: true,\n      ...taskElement\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      data: dataTask,\n      changeStatus: changeStatus,\n      modalEditView: modalEditView,\n      requestEditModal: requestEditModal,\n      checkModalEditView: checkModalEditView,\n      editedTask: editedTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskContextProvider, \"nRwCrJ5cS3PEH5bEvM7UBRRx5ig=\");\n_c = TaskContextProvider;\nexport default TaskContext;\nvar _c;\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"names":["React","useState","DEFAULT_TASKS","addStructure","jsxDEV","_jsxDEV","TaskContext","createContext","TaskContextProvider","children","_s","dataTask","mutateDataTask","modalEditView","checkModalEditView","status","dataTaskElement","modalDeleteView","checkModalDeleteView","use","editedTask","task","map","obj","id","name","priority","changeStatus","requestEditModal","taskElement","filter","statusModal","Provider","value","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zakharonak.as/Desktop/CartEvent/cart-event/src/store/task-list.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DEFAULT_TASKS from \"./ConstantsVariable\";\r\nimport addStructure from \"./addStructureFunc\";\r\n\r\nconst TaskContext = React.createContext();\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [dataTask, mutateDataTask] = useState(addStructure(DEFAULT_TASKS));\r\n  const [modalEditView, checkModalEditView] = useState({\r\n    status: false,\r\n    dataTaskElement: {},\r\n  });\r\n  const [modalDeleteView, checkModalDeleteView] = use\r\n\r\n  const editedTask = (task) => {\r\n    DEFAULT_TASKS.map((obj) => {\r\n      if (obj.id === task.id) {\r\n        return (obj.name = task.name), (obj.priority = task.priority);\r\n      }\r\n    });\r\n    mutateDataTask(addStructure(DEFAULT_TASKS));\r\n  };\r\n\r\n  const changeStatus = (id) => {\r\n    DEFAULT_TASKS.map((obj) => {\r\n      if (obj.id === id) {\r\n        if (obj.status <= 2) {\r\n          return (obj.status += 1);\r\n        } else {\r\n          return (obj.status = 1);\r\n        }\r\n      }\r\n    });\r\n    mutateDataTask(addStructure(DEFAULT_TASKS));\r\n  };\r\n\r\n  const requestEditModal = (id) => {\r\n    const [taskElement] = dataTask.filter((obj) => obj.id === id);\r\n    checkModalEditView({\r\n      statusModal: true,\r\n      ...taskElement,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        data: dataTask,\r\n        changeStatus: changeStatus,\r\n        modalEditView: modalEditView,\r\n        requestEditModal: requestEditModal,\r\n        checkModalEditView: checkModalEditView,\r\n        editedTask: editedTask,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,QAAQ,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACE,YAAY,CAACD,aAAa,CAAC,CAAC;EACxE,MAAM,CAACW,aAAa,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC;IACnDc,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,CAAC;EACpB,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,oBAAoB,CAAC,GAAGC,GAAG;EAEnD,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3BnB,aAAa,CAACoB,GAAG,CAAEC,GAAG,IAAK;MACzB,IAAIA,GAAG,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,EAAE;QACtB,OAAQD,GAAG,CAACE,IAAI,GAAGJ,IAAI,CAACI,IAAI,EAAIF,GAAG,CAACG,QAAQ,GAAGL,IAAI,CAACK,QAAS;MAC/D;IACF,CAAC,CAAC;IACFd,cAAc,CAACT,YAAY,CAACD,aAAa,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMyB,YAAY,GAAIH,EAAE,IAAK;IAC3BtB,aAAa,CAACoB,GAAG,CAAEC,GAAG,IAAK;MACzB,IAAIA,GAAG,CAACC,EAAE,KAAKA,EAAE,EAAE;QACjB,IAAID,GAAG,CAACR,MAAM,IAAI,CAAC,EAAE;UACnB,OAAQQ,GAAG,CAACR,MAAM,IAAI,CAAC;QACzB,CAAC,MAAM;UACL,OAAQQ,GAAG,CAACR,MAAM,GAAG,CAAC;QACxB;MACF;IACF,CAAC,CAAC;IACFH,cAAc,CAACT,YAAY,CAACD,aAAa,CAAC,CAAC;EAC7C,CAAC;EAED,MAAM0B,gBAAgB,GAAIJ,EAAE,IAAK;IAC/B,MAAM,CAACK,WAAW,CAAC,GAAGlB,QAAQ,CAACmB,MAAM,CAAEP,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKA,EAAE,CAAC;IAC7DV,kBAAkB,CAAC;MACjBiB,WAAW,EAAE,IAAI;MACjB,GAAGF;IACL,CAAC,CAAC;EACJ,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MACLC,IAAI,EAAEvB,QAAQ;MACdgB,YAAY,EAAEA,YAAY;MAC1Bd,aAAa,EAAEA,aAAa;MAC5Be,gBAAgB,EAAEA,gBAAgB;MAClCd,kBAAkB,EAAEA,kBAAkB;MACtCM,UAAU,EAAEA;IACd,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CApDWF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAsDhC,eAAeF,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}